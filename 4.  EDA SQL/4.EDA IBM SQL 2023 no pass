{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9fa0b92f",
   "metadata": {},
   "outputs": [],
   "source": [
    "!pip install sqlalchemy==1.3.9\n",
    "!pip install ibm_db_sa\n",
    "!pip install ipython-sql"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5a0155ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql ibm_db_sa://XXXXX.databases.appdomain.cloud:31198/bludb?security=SSL"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "32408fbc",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql select distinct(LAUNCH SITE) from SPACEXKAT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "16c03db7",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql  select * from SPACEXKAT where LAUNCH_SITE like '%KSC' limit 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6335290b",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql select* from SPACEXKAT where LAUNCH_SITE like '%CCA' limit \"5. zadatak IBM SQL 2023.ipynb\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93a943a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql select sum(PAYLOAD_MASS_KG_) from SPACEXKAT where CUSTOMER = 'NASA (CRS)'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "672f7622",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql select avg(PAYLOAD_MASS_KG_) from SPACEXKAT where BOOSTER_VERSION = 'F9 v1.1'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9245d2d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql select min(DATE) from SPACEXKAT where Landing_Outcome = 'Success (drone ship)'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2bf4059c",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql select BOOSTER_VERSION from SPACEXKAT where Laning_Outcome = 'Success (ground pad)' and PAYLOAD_MASS_KG_> 4000 and PAYLOAD_MASS_KG_ < 6000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "66ebe495",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql  SELECT COUNT(MISSION_OUTCOME) AS 'Successful' FROM SPACEXKAT WHERE MISSION_OUTCOME LIKE '%Success%'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43ca1116",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql  SELECT COUNT(MISSION_OUTCOME) AS 'Failure' FROM SPACEXKAT WHERE MISSION_OUTCOME LIKE '%Failure%'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bfd17d34",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql SELECT BOOSTER_VERSION FROM SPACEXKAT WHERE PAYLOAD_MASS_KG_ = (SELECT MAX (PAYLOAD_MASS_KG_) FROM SPACEXKAT)\n",
    "#ODE SU svi iz kolone booster version koji imaju odredjenu kilazu, npr maksimalnu, a gore di min samo taj min izvlacimo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "99c4159a",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql SELECT month(DATE) AS Month, Landing_Outcome, BOOSTER_VERSION, LAUNCH_SITE FROM SPACEXKAT WHERE year(DATE) = '2017' AND LANDING_OUTCOME = '%Success (ground pad)%'\n",
    "#znaci prvo pises imena kolona, samo odma izdvojis da ce se iz kolone date pisat i VADIT samo month, a onda uvjete iza where"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9df18e85",
   "metadata": {},
   "outputs": [],
   "source": [
    "%sql SELECT COUNT(LANDING_OUTCOME) FROM SPACEXKAT WHERE LANDING_OUTCOME LIKE '%Success' AND DATE > '2020-06-04' AND DATE < '2017-03-20' ORDER BY DATE DES\n",
    "#kad god je total number radis select count,dakle prvo prebroji sumu ukupnu necega sta se trazi,neke kolone npr., a onda po uvjetima za koje tu sumu jos filtriramo tj za koje je stavke pregledavamo"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
